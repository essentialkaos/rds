package client

// ////////////////////////////////////////////////////////////////////////////////// //
//                                                                                    //
//                         Copyright (c) 2023 ESSENTIAL KAOS                          //
//      Apache License, Version 2.0 <https://www.apache.org/licenses/LICENSE-2.0>     //
//                                                                                    //
// ////////////////////////////////////////////////////////////////////////////////// //

import (
	"fmt"
	"strings"

	"github.com/essentialkaos/redy/v4"
)

// ////////////////////////////////////////////////////////////////////////////////// //

// CommandInfo is struct with info about command (name, params, support flag)
type CommandInfo struct {
	Name        string
	Params      []string
	IsSupported bool
}

// commands is reversed slice with all available redis commands with required arguments
var commands []*CommandInfo

// ////////////////////////////////////////////////////////////////////////////////// //

// getCommands return slice with all available commands
func getCommands() []*CommandInfo {
	if commands == nil {
		commands = []*CommandInfo{
			{"ZUNIONSTORE", []string{"destination", "numkeys", "key", "[key ...]", "[WEIGHTS weight [weight ...]]", "[AGGREGATE SUM|MIN|MAX]"}, false},
			{"ZUNION", []string{"numkeys", "key", "[key ...]", "[WEIGHTS weight [weight ...]]", "[AGGREGATE SUM|MIN|MAX]", "[WITHSCORES]"}, false},
			{"ZSCORE", []string{"key", "member"}, false},
			{"ZSCAN", []string{"key", "cursor", "[MATCH pattern]", "[COUNT count]"}, false},
			{"ZREVRANK", []string{"key", "member"}, false},
			{"ZREVRANGEBYSCORE", []string{"key", "max", "min", "[WITHSCORES]", "[LIMIT offset count]"}, false},
			{"ZREVRANGEBYLEX", []string{"key", "max", "min", "[LIMIT offset count]"}, false},
			{"ZREVRANGE", []string{"key", "start", "stop", "[WITHSCORES]"}, false},
			{"ZREMRANGEBYSCORE", []string{"key", "min", "max"}, false},
			{"ZREMRANGEBYRANK", []string{"key", "start", "stop"}, false},
			{"ZREMRANGEBYLEX", []string{"key", "min", "max"}, false},
			{"ZREM", []string{"key", "member", "[member ...]"}, false},
			{"ZRANK", []string{"key", "member"}, false},
			{"ZRANGESTORE", []string{"dst", "src", "min", "max", "[BYSCORE|BYLEX]", "[REV]", "[LIMIT offset count]"}, false},
			{"ZRANGEBYSCORE", []string{"key", "min", "max", "[WITHSCORES]", "[LIMIT offset count]"}, false},
			{"ZRANGEBYLEX", []string{"key", "min", "max", "[LIMIT offset count]"}, false},
			{"ZRANGE", []string{"key", "start", "stop", "[BYSCORE|BYLEX]", "[REV]", "[LIMIT offset count]", "[WITHSCORES]"}, false},
			{"ZRANDMEMBER", []string{"key", "[count [WITHSCORES]]"}, false},
			{"ZPOPMIN", []string{"key", "[count]"}, false},
			{"ZPOPMAX", []string{"key", "[count]"}, false},
			{"ZMSCORE", []string{"key", "member", "[member ...]"}, false},
			{"ZMPOP", []string{"numkeys", "key", "[key ...]", "MIN|MAX", "[COUNT count]"}, false},
			{"ZLEXCOUNT", []string{"key", "min", "max"}, false},
			{"ZINTERSTORE", []string{"destination", "numkeys", "key", "[key ...]", "[WEIGHTS weight [weight ...]]", "[AGGREGATE SUM|MIN|MAX]"}, false},
			{"ZINTERCARD", []string{"numkeys", "key", "[key ...]", "[LIMIT limit]"}, false},
			{"ZINTER", []string{"numkeys", "key", "[key ...]", "[WEIGHTS weight [weight ...]]", "[AGGREGATE SUM|MIN|MAX]", "[WITHSCORES]"}, false},
			{"ZINCRBY", []string{"key", "increment", "member"}, false},
			{"ZDIFFSTORE", []string{"destination", "numkeys", "key", "[key ...]"}, false},
			{"ZDIFF", []string{"numkeys", "key", "[key ...]", "[WITHSCORES]"}, false},
			{"ZCOUNT", []string{"key", "min", "max"}, false},
			{"ZCARD", []string{"key"}, false},
			{"ZADD", []string{"key", "[NX|XX]", "[GT|LT]", "[CH]", "[INCR]", "score", "member", "[score member ...]"}, false},
			{"XTRIM", []string{"key", "MAXLEN|MINID", "[=|~]", "threshold", "[LIMIT count]"}, false},
			{"XSETID", []string{"key", "last-id", "[ENTRIESADDED entries_added]", "[MAXDELETEDID max_deleted_entry_id]"}, false},
			{"XREVRANGE", []string{"key", "end", "start", "[COUNT count]"}, false},
			{"XREADGROUP", []string{"GROUP", "group", "consumer", "[COUNT count]", "[BLOCK milliseconds]", "[NOACK]", "STREAMS", "key", "[key ...]", "id", "[id ...]"}, false},
			{"XREAD", []string{"[COUNT count]", "[BLOCK milliseconds]", "STREAMS", "key", "[key ...]", "id", "[id ...]"}, false},
			{"XRANGE", []string{"key", "start", "end", "[COUNT count]"}, false},
			{"XPENDING", []string{"key", "group", "[[IDLE min-idle-time]", "start", "end", "count", "[consumer]]"}, false},
			{"XLEN", []string{"key"}, false},
			{"XINFO", nil, false},
			{"XINFO STREAM", []string{"key", "[FULL [COUNT count]]"}, false},
			{"XINFO HELP", nil, false},
			{"XINFO GROUPS", []string{"key"}, false},
			{"XINFO CONSUMERS", []string{"key", "groupname"}, false},
			{"XGROUP", nil, false},
			{"XGROUP SETID", []string{"key", "groupname", "id|$", "[ENTRIESREAD entries_read]"}, false},
			{"XGROUP HELP", nil, false},
			{"XGROUP DESTROY", []string{"key", "groupname"}, false},
			{"XGROUP DELCONSUMER", []string{"key", "groupname", "consumername"}, false},
			{"XGROUP CREATECONSUMER", []string{"key", "groupname", "consumername"}, false},
			{"XGROUP CREATE", []string{"key", "groupname", "id|$", "[MKSTREAM]", "[ENTRIESREAD entries_read]"}, false},
			{"XDEL", []string{"key", "id", "[id ...]"}, false},
			{"XCLAIM", []string{"key", "group", "consumer", "min-idle-time", "id", "[id ...]", "[IDLE ms]", "[TIME unix-time-milliseconds]", "[RETRYCOUNT count]", "[FORCE]", "[JUSTID]", "[LASTID id]"}, false},
			{"XAUTOCLAIM", []string{"key", "group", "consumer", "min-idle-time", "start", "[COUNT count]", "[JUSTID]"}, false},
			{"XADD", []string{"key", "[NOMKSTREAM]", "[MAXLEN|MINID [=|~]", "threshold", "[LIMIT count]]", "*|id", "field", "value", "[field value ...]"}, false},
			{"XACK", []string{"key", "group", "id", "[id ...]"}, false},
			{"WATCH", []string{"key", "[key ...]"}, false},
			{"WAIT", []string{"numreplicas", "timeout"}, false},
			{"UNWATCH", nil, false},
			{"UNSUBSCRIBE", []string{"[channel [channel ...]]"}, false},
			{"UNLINK", []string{"key", "[key ...]"}, false},
			{"TYPE", []string{"key"}, false},
			{"TTL", []string{"key"}, false},
			{"TOUCH", []string{"key", "[key ...]"}, false},
			{"TIME", nil, false},
			{"SYNC", nil, false},
			{"SWAPDB", []string{"index1", "index2"}, false},
			{"SUNSUBSCRIBE", []string{"[shardchannel [shardchannel ...]]"}, false},
			{"SUNIONSTORE", []string{"destination", "key", "[key ...]"}, false},
			{"SUNION", []string{"key", "[key ...]"}, false},
			{"SUBSTR", []string{"key", "start", "end"}, false},
			{"SUBSCRIBE", []string{"channel", "[channel ...]"}, false},
			{"STRLEN", []string{"key"}, false},
			{"SSUBSCRIBE", []string{"shardchannel", "[shardchannel ...]"}, false},
			{"SSCAN", []string{"key", "cursor", "[MATCH pattern]", "[COUNT count]"}, false},
			{"SREM", []string{"key", "member", "[member ...]"}, false},
			{"SRANDMEMBER", []string{"key", "[count]"}, false},
			{"SPUBLISH", []string{"shardchannel", "message"}, false},
			{"SPOP", []string{"key", "[count]"}, false},
			{"SORT_RO", []string{"key", "[BY pattern]", "[LIMIT offset count]", "[GET pattern [GET pattern ...]]", "[ASC|DESC]", "[ALPHA]"}, false},
			{"SORT", []string{"key", "[BY pattern]", "[LIMIT offset count]", "[GET pattern [GET pattern ...]]", "[ASC|DESC]", "[ALPHA]", "[STORE destination]"}, false},
			{"SMOVE", []string{"source", "destination", "member"}, false},
			{"SMISMEMBER", []string{"key", "member", "[member ...]"}, false},
			{"SMEMBERS", []string{"key"}, false},
			{"SLOWLOG", nil, false},
			{"SLOWLOG RESET", nil, false},
			{"SLOWLOG LEN", nil, false},
			{"SLOWLOG HELP", nil, false},
			{"SLOWLOG GET", []string{"[count]"}, false},
			{"SLAVEOF", []string{"host", "port"}, false},
			{"SISMEMBER", []string{"key", "member"}, false},
			{"SINTERSTORE", []string{"destination", "key", "[key ...]"}, false},
			{"SINTERCARD", []string{"numkeys", "key", "[key ...]", "[LIMIT limit]"}, false},
			{"SINTER", []string{"key", "[key ...]"}, false},
			{"SHUTDOWN", []string{"[NOSAVE|SAVE]", "[NOW]", "[FORCE]", "[ABORT]"}, false},
			{"SETRANGE", []string{"key", "offset", "value"}, false},
			{"SETNX", []string{"key", "value"}, false},
			{"SETEX", []string{"key", "seconds", "value"}, false},
			{"SETBIT", []string{"key", "offset", "value"}, false},
			{"SET", []string{"key", "value", "[NX|XX]", "[GET]", "[EX seconds|PX milliseconds|EXAT unix-time-seconds|PXAT unix-time-milliseconds|KEEPTTL]"}, false},
			{"SELECT", []string{"index"}, false},
			{"SDIFFSTORE", []string{"destination", "key", "[key ...]"}, false},
			{"SDIFF", []string{"key", "[key ...]"}, false},
			{"SCRIPT", nil, false},
			{"SCRIPT LOAD", []string{"script"}, false},
			{"SCRIPT KILL", nil, false},
			{"SCRIPT HELP", nil, false},
			{"SCRIPT FLUSH", []string{"[ASYNC|SYNC]"}, false},
			{"SCRIPT EXISTS", []string{"sha1", "[sha1 ...]"}, false},
			{"SCRIPT DEBUG", []string{"YES|SYNC|NO"}, false},
			{"SCARD", []string{"key"}, false},
			{"SCAN", []string{"cursor", "[MATCH pattern]", "[COUNT count]", "[TYPE type]"}, false},
			{"SAVE", nil, false},
			{"SADD", []string{"key", "member", "[member ...]"}, false},
			{"RPUSHX", []string{"key", "element", "[element ...]"}, false},
			{"RPUSH", []string{"key", "element", "[element ...]"}, false},
			{"RPOPLPUSH", []string{"source", "destination"}, false},
			{"RPOP", []string{"key", "[count]"}, false},
			{"ROLE", nil, false},
			{"RESTORE-ASKING", []string{"key", "ttl", "serialized-value", "[REPLACE]", "[ABSTTL]", "[IDLETIME seconds]", "[FREQ frequency]"}, false},
			{"RESTORE", []string{"key", "ttl", "serialized-value", "[REPLACE]", "[ABSTTL]", "[IDLETIME seconds]", "[FREQ frequency]"}, false},
			{"RESET", nil, false},
			{"REPLICAOF", []string{"host", "port"}, false},
			{"REPLCONF", nil, false},
			{"RENAMENX", []string{"key", "newkey"}, false},
			{"RENAME", []string{"key", "newkey"}, false},
			{"READWRITE", nil, false},
			{"READONLY", nil, false},
			{"RANDOMKEY", nil, false},
			{"QUIT", nil, false},
			{"PUNSUBSCRIBE", []string{"[pattern [pattern ...]]"}, false},
			{"PUBSUB", nil, false},
			{"PUBSUB SHARDNUMSUB", []string{"[shardchannel [shardchannel ...]]"}, false},
			{"PUBSUB SHARDCHANNELS", []string{"[pattern]"}, false},
			{"PUBSUB NUMSUB", []string{"[channel [channel ...]]"}, false},
			{"PUBSUB NUMPAT", nil, false},
			{"PUBSUB HELP", nil, false},
			{"PUBSUB CHANNELS", []string{"[pattern]"}, false},
			{"PUBLISH", []string{"channel", "message"}, false},
			{"PTTL", []string{"key"}, false},
			{"PSYNC", []string{"replicationid", "offset"}, false},
			{"PSUBSCRIBE", []string{"pattern", "[pattern ...]"}, false},
			{"PSETEX", []string{"key", "milliseconds", "value"}, false},
			{"PING", []string{"[message]"}, false},
			{"PFSELFTEST", nil, false},
			{"PFMERGE", []string{"destkey", "sourcekey", "[sourcekey ...]"}, false},
			{"PFDEBUG", []string{"subcommand", "key"}, false},
			{"PFCOUNT", []string{"key", "[key ...]"}, false},
			{"PFADD", []string{"key", "[element [element ...]]"}, false},
			{"PEXPIRETIME", []string{"key"}, false},
			{"PEXPIREAT", []string{"key", "unix-time-milliseconds", "[NX|XX|GT|LT]"}, false},
			{"PEXPIRE", []string{"key", "milliseconds", "[NX|XX|GT|LT]"}, false},
			{"PERSIST", []string{"key"}, false},
			{"OBJECT", nil, false},
			{"OBJECT REFCOUNT", []string{"key"}, false},
			{"OBJECT IDLETIME", []string{"key"}, false},
			{"OBJECT HELP", nil, false},
			{"OBJECT FREQ", []string{"key"}, false},
			{"OBJECT ENCODING", []string{"key"}, false},
			{"MULTI", nil, false},
			{"MSETNX", []string{"key", "value", "[key value ...]"}, false},
			{"MSET", []string{"key", "value", "[key value ...]"}, false},
			{"MOVE", []string{"key", "db"}, false},
			{"MONITOR", nil, false},
			{"MODULE", nil, false},
			{"MODULE UNLOAD", []string{"name"}, false},
			{"MODULE LOADEX", []string{"path", "[CONFIG name value [CONFIG name value ...]]", "[ARGS arg [arg ...]]"}, false},
			{"MODULE LOAD", []string{"path", "[arg [arg ...]]"}, false},
			{"MODULE LIST", nil, false},
			{"MODULE HELP", nil, false},
			{"MIGRATE", []string{"host", "port", "key|", "destination-db", "timeout", "[COPY]", "[REPLACE]", "[[AUTH password]|[AUTH2 username password]]", "[KEYS key [key ...]]"}, false},
			{"MGET", []string{"key", "[key ...]"}, false},
			{"MEMORY", nil, false},
			{"MEMORY USAGE", []string{"key", "[SAMPLES count]"}, false},
			{"MEMORY STATS", nil, false},
			{"MEMORY PURGE", nil, false},
			{"MEMORY MALLOC-STATS", nil, false},
			{"MEMORY HELP", nil, false},
			{"MEMORY DOCTOR", nil, false},
			{"LTRIM", []string{"key", "start", "stop"}, false},
			{"LSET", []string{"key", "index", "element"}, false},
			{"LREM", []string{"key", "count", "element"}, false},
			{"LRANGE", []string{"key", "start", "stop"}, false},
			{"LPUSHX", []string{"key", "element", "[element ...]"}, false},
			{"LPUSH", []string{"key", "element", "[element ...]"}, false},
			{"LPOS", []string{"key", "element", "[RANK rank]", "[COUNT num-matches]", "[MAXLEN len]"}, false},
			{"LPOP", []string{"key", "[count]"}, false},
			{"LOLWUT", []string{"[VERSION version]"}, false},
			{"LMPOP", []string{"numkeys", "key", "[key ...]", "LEFT|RIGHT", "[COUNT count]"}, false},
			{"LMOVE", []string{"source", "destination", "LEFT|RIGHT", "LEFT|RIGHT"}, false},
			{"LLEN", []string{"key"}, false},
			{"LINSERT", []string{"key", "BEFORE|AFTER", "pivot", "element"}, false},
			{"LINDEX", []string{"key", "index"}, false},
			{"LCS", []string{"key1", "key2", "[LEN]", "[IDX]", "[MINMATCHLEN len]", "[WITHMATCHLEN]"}, false},
			{"LATENCY", nil, false},
			{"LATENCY RESET", []string{"[event [event ...]]"}, false},
			{"LATENCY LATEST", nil, false},
			{"LATENCY HISTORY", []string{"event"}, false},
			{"LATENCY HISTOGRAM", []string{"[command [command ...]]"}, false},
			{"LATENCY HELP", nil, false},
			{"LATENCY GRAPH", []string{"event"}, false},
			{"LATENCY DOCTOR", nil, false},
			{"LASTSAVE", nil, false},
			{"KEYS", []string{"pattern"}, false},
			{"INFO", []string{"[section [section ...]]"}, false},
			{"INCRBYFLOAT", []string{"key", "increment"}, false},
			{"INCRBY", []string{"key", "increment"}, false},
			{"INCR", []string{"key"}, false},
			{"HVALS", []string{"key"}, false},
			{"HSTRLEN", []string{"key", "field"}, false},
			{"HSETNX", []string{"key", "field", "value"}, false},
			{"HSET", []string{"key", "field", "value", "[field value ...]"}, false},
			{"HSCAN", []string{"key", "cursor", "[MATCH pattern]", "[COUNT count]"}, false},
			{"HRANDFIELD", []string{"key", "[count [WITHVALUES]]"}, false},
			{"HMSET", []string{"key", "field", "value", "[field value ...]"}, false},
			{"HMGET", []string{"key", "field", "[field ...]"}, false},
			{"HLEN", []string{"key"}, false},
			{"HKEYS", []string{"key"}, false},
			{"HINCRBYFLOAT", []string{"key", "field", "increment"}, false},
			{"HINCRBY", []string{"key", "field", "increment"}, false},
			{"HGETALL", []string{"key"}, false},
			{"HGET", []string{"key", "field"}, false},
			{"HEXISTS", []string{"key", "field"}, false},
			{"HELLO", []string{"[protover [AUTH username password]", "[SETNAME clientname]]"}, false},
			{"HDEL", []string{"key", "field", "[field ...]"}, false},
			{"GETSET", []string{"key", "value"}, false},
			{"GETRANGE", []string{"key", "start", "end"}, false},
			{"GETEX", []string{"key", "[EX seconds|PX milliseconds|EXAT unix-time-seconds|PXAT unix-time-milliseconds|PERSIST]"}, false},
			{"GETDEL", []string{"key"}, false},
			{"GETBIT", []string{"key", "offset"}, false},
			{"GET", []string{"key"}, false},
			{"GEOSEARCHSTORE", []string{"destination", "source", "FROMMEMBER", "member|FROMLONLAT", "longitude", "latitude", "BYRADIUS", "radius", "M|KM|FT|MI|BYBOX", "width", "height", "M|KM|FT|MI", "[ASC|DESC]", "[COUNT count [ANY]]", "[STOREDIST]"}, false},
			{"GEOSEARCH", []string{"key", "FROMMEMBER", "member|FROMLONLAT", "longitude", "latitude", "BYRADIUS", "radius", "M|KM|FT|MI|BYBOX", "width", "height", "M|KM|FT|MI", "[ASC|DESC]", "[COUNT count [ANY]]", "[WITHCOORD]", "[WITHDIST]", "[WITHHASH]"}, false},
			{"GEORADIUSBYMEMBER_RO", []string{"key", "member", "radius", "M|KM|FT|MI", "[WITHCOORD]", "[WITHDIST]", "[WITHHASH]", "[COUNT count [ANY]]", "[ASC|DESC]"}, false},
			{"GEORADIUSBYMEMBER", []string{"key", "member", "radius", "M|KM|FT|MI", "[WITHCOORD]", "[WITHDIST]", "[WITHHASH]", "[COUNT count [ANY]]", "[ASC|DESC]", "[STORE key]", "[STOREDIST key]"}, false},
			{"GEORADIUS_RO", []string{"key", "longitude", "latitude", "radius", "M|KM|FT|MI", "[WITHCOORD]", "[WITHDIST]", "[WITHHASH]", "[COUNT count [ANY]]", "[ASC|DESC]"}, false},
			{"GEORADIUS", []string{"key", "longitude", "latitude", "radius", "M|KM|FT|MI", "[WITHCOORD]", "[WITHDIST]", "[WITHHASH]", "[COUNT count [ANY]]", "[ASC|DESC]", "[STORE key]", "[STOREDIST key]"}, false},
			{"GEOPOS", []string{"key", "member", "[member ...]"}, false},
			{"GEOHASH", []string{"key", "member", "[member ...]"}, false},
			{"GEODIST", []string{"key", "member1", "member2", "[M|KM|FT|MI]"}, false},
			{"GEOADD", []string{"key", "[NX|XX]", "[CH]", "longitude", "latitude", "member", "[longitude latitude member ...]"}, false},
			{"FUNCTION", nil, false},
			{"FUNCTION STATS", nil, false},
			{"FUNCTION RESTORE", []string{"serialized-value", "[FLUSH|APPEND|REPLACE]"}, false},
			{"FUNCTION LOAD", []string{"[REPLACE]", "function-code"}, false},
			{"FUNCTION LIST", []string{"[LIBRARYNAME library-name-pattern]", "[WITHCODE]"}, false},
			{"FUNCTION KILL", nil, false},
			{"FUNCTION HELP", nil, false},
			{"FUNCTION FLUSH", []string{"[ASYNC|SYNC]"}, false},
			{"FUNCTION DUMP", nil, false},
			{"FUNCTION DELETE", []string{"library-name"}, false},
			{"FLUSHDB", []string{"[ASYNC|SYNC]"}, false},
			{"FLUSHALL", []string{"[ASYNC|SYNC]"}, false},
			{"FCALL_RO", []string{"function", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"FCALL", []string{"function", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"FAILOVER", []string{"[TO host port [FORCE]]", "[ABORT]", "[TIMEOUT milliseconds]"}, false},
			{"EXPIRETIME", []string{"key"}, false},
			{"EXPIREAT", []string{"key", "unix-time-seconds", "[NX|XX|GT|LT]"}, false},
			{"EXPIRE", []string{"key", "seconds", "[NX|XX|GT|LT]"}, false},
			{"EXISTS", []string{"key", "[key ...]"}, false},
			{"EXEC", nil, false},
			{"EVALSHA_RO", []string{"sha1", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"EVALSHA", []string{"sha1", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"EVAL_RO", []string{"script", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"EVAL", []string{"script", "numkeys", "[key [key ...]]", "[arg [arg ...]]"}, false},
			{"ECHO", []string{"message"}, false},
			{"DUMP", []string{"key"}, false},
			{"DISCARD", nil, false},
			{"DEL", []string{"key", "[key ...]"}, false},
			{"DECRBY", []string{"key", "decrement"}, false},
			{"DECR", []string{"key"}, false},
			{"DEBUG", nil, false},
			{"DBSIZE", nil, false},
			{"COPY", []string{"source", "destination", "[DB destination-db]", "[REPLACE]"}, false},
			{"CONFIG", nil, false},
			{"CONFIG SET", []string{"parameter", "value", "[parameter value ...]"}, false},
			{"CONFIG REWRITE", nil, false},
			{"CONFIG RESETSTAT", nil, false},
			{"CONFIG HELP", nil, false},
			{"CONFIG GET", []string{"parameter", "[parameter ...]"}, false},
			{"COMMAND", nil, false},
			{"COMMAND LIST", []string{"[FILTERBY MODULE module-name|ACLCAT category|PATTERN pattern]"}, false},
			{"COMMAND INFO", []string{"[command-name [command-name ...]]"}, false},
			{"COMMAND HELP", nil, false},
			{"COMMAND GETKEYSANDFLAGS", nil, false},
			{"COMMAND GETKEYS", nil, false},
			{"COMMAND DOCS", []string{"[command-name [command-name ...]]"}, false},
			{"COMMAND COUNT", nil, false},
			{"CLUSTER", nil, false},
			{"CLUSTER SLOTS", nil, false},
			{"CLUSTER SLAVES", []string{"node-id"}, false},
			{"CLUSTER SHARDS", nil, false},
			{"CLUSTER SETSLOT", []string{"slot", "IMPORTING", "node-id|MIGRATING", "node-id|NODE", "node-id|STABLE"}, false},
			{"CLUSTER SET-CONFIG-EPOCH", []string{"config-epoch"}, false},
			{"CLUSTER SAVECONFIG", nil, false},
			{"CLUSTER RESET", []string{"[HARD|SOFT]"}, false},
			{"CLUSTER REPLICATE", []string{"node-id"}, false},
			{"CLUSTER REPLICAS", []string{"node-id"}, false},
			{"CLUSTER NODES", nil, false},
			{"CLUSTER MYID", nil, false},
			{"CLUSTER MEET", []string{"ip", "port", "[cluster_bus_port]"}, false},
			{"CLUSTER LINKS", nil, false},
			{"CLUSTER KEYSLOT", []string{"key"}, false},
			{"CLUSTER INFO", nil, false},
			{"CLUSTER HELP", nil, false},
			{"CLUSTER GETKEYSINSLOT", []string{"slot", "count"}, false},
			{"CLUSTER FORGET", []string{"node-id"}, false},
			{"CLUSTER FLUSHSLOTS", nil, false},
			{"CLUSTER FAILOVER", []string{"[FORCE|TAKEOVER]"}, false},
			{"CLUSTER DELSLOTSRANGE", []string{"start-slot", "end-slot", "[start-slot end-slot ...]"}, false},
			{"CLUSTER DELSLOTS", []string{"slot", "[slot ...]"}, false},
			{"CLUSTER COUNTKEYSINSLOT", []string{"slot"}, false},
			{"CLUSTER COUNT-FAILURE-REPORTS", []string{"node-id"}, false},
			{"CLUSTER BUMPEPOCH", nil, false},
			{"CLUSTER ADDSLOTSRANGE", []string{"start-slot", "end-slot", "[start-slot end-slot ...]"}, false},
			{"CLUSTER ADDSLOTS", []string{"slot", "[slot ...]"}, false},
			{"CLIENT", nil, false},
			{"CLIENT UNPAUSE", nil, false},
			{"CLIENT UNBLOCK", []string{"client-id", "[TIMEOUT|ERROR]"}, false},
			{"CLIENT TRACKINGINFO", nil, false},
			{"CLIENT TRACKING", []string{"ON|OFF", "[REDIRECT client-id]", "[PREFIX prefix [PREFIX prefix ...]]", "[BCAST]", "[OPTIN]", "[OPTOUT]", "[NOLOOP]"}, false},
			{"CLIENT SETNAME", []string{"connection-name"}, false},
			{"CLIENT REPLY", []string{"ON|OFF|SKIP"}, false},
			{"CLIENT PAUSE", []string{"timeout", "[WRITE|ALL]"}, false},
			{"CLIENT NO-EVICT", []string{"ON|OFF"}, false},
			{"CLIENT LIST", []string{"[TYPE NORMAL|MASTER|REPLICA|PUBSUB]", "[ID client-id [client-id ...]]"}, false},
			{"CLIENT KILL", []string{"ip:port|[ID client-id]|[TYPE NORMAL|MASTER|SLAVE|REPLICA|PUBSUB]|[USER username]|[ADDR ip:port]|[LADDR ip:port]|[SKIPME yes/no]", "[[ID client-id]|[TYPE NORMAL|MASTER|SLAVE|REPLICA|PUBSUB]|[USER username]|[ADDR ip:port]|[LADDR ip:port]|[SKIPME yes/no]", "...]"}, false},
			{"CLIENT INFO", nil, false},
			{"CLIENT ID", nil, false},
			{"CLIENT HELP", nil, false},
			{"CLIENT GETREDIR", nil, false},
			{"CLIENT GETNAME", nil, false},
			{"CLIENT CACHING", []string{"YES|NO"}, false},
			{"BZPOPMIN", []string{"key", "[key ...]", "timeout"}, false},
			{"BZPOPMAX", []string{"key", "[key ...]", "timeout"}, false},
			{"BZMPOP", []string{"timeout", "numkeys", "key", "[key ...]", "MIN|MAX", "[COUNT count]"}, false},
			{"BRPOPLPUSH", []string{"source", "destination", "timeout"}, false},
			{"BRPOP", []string{"key", "[key ...]", "timeout"}, false},
			{"BLPOP", []string{"key", "[key ...]", "timeout"}, false},
			{"BLMPOP", []string{"timeout", "numkeys", "key", "[key ...]", "LEFT|RIGHT", "[COUNT count]"}, false},
			{"BLMOVE", []string{"source", "destination", "LEFT|RIGHT", "LEFT|RIGHT", "timeout"}, false},
			{"BITPOS", []string{"key", "bit", "[start [end [BYTE|BIT]]]"}, false},
			{"BITOP", []string{"operation", "destkey", "key", "[key ...]"}, false},
			{"BITFIELD_RO", []string{"key", "GET", "encoding", "offset", "[GET encoding offset ...]"}, false},
			{"BITFIELD", []string{"key", "GET", "encoding", "offset|[OVERFLOW WRAP|SAT|FAIL]", "SET", "encoding", "offset", "value|INCRBY", "encoding", "offset", "increment", "[GET encoding offset|[OVERFLOW WRAP|SAT|FAIL]", "SET", "encoding", "offset", "value|INCRBY", "encoding", "offset", "increment", "...]"}, false},
			{"BITCOUNT", []string{"key", "[start end [BYTE|BIT]]"}, false},
			{"BGSAVE", []string{"[SCHEDULE]"}, false},
			{"BGREWRITEAOF", nil, false},
			{"AUTH", []string{"[username]", "password"}, false},
			{"ASKING", nil, false},
			{"APPEND", []string{"key", "value"}, false},
			{"ACL", nil, false},
			{"ACL WHOAMI", nil, false},
			{"ACL USERS", nil, false},
			{"ACL SETUSER", []string{"username", "[rule [rule ...]]"}, false},
			{"ACL SAVE", nil, false},
			{"ACL LOG", []string{"[count|RESET]"}, false},
			{"ACL LOAD", nil, false},
			{"ACL LIST", nil, false},
			{"ACL HELP", nil, false},
			{"ACL GETUSER", []string{"username"}, false},
			{"ACL GENPASS", []string{"[bits]"}, false},
			{"ACL DRYRUN", []string{"username", "command", "[arg [arg ...]]"}, false},
			{"ACL DELUSER", []string{"username", "[username ...]"}, false},
			{"ACL CAT", []string{"[categoryname]"}, false},
		}
	}

	return commands
}

// getAvailableCommands return slice with all redis commands
func getAvailableCommands() []string {
	var result []string

	for _, command := range getCommands() {
		if command.IsSupported {
			result = append(result, command.Name)
		}
	}

	return result
}

// updateCommandsSupport update commands support by used redis version
func updateCommandsSupport(client *redy.Client) error {
	resp := client.Cmd("COMMAND")

	if resp.Err != nil {
		return resp.Err
	}

	commandList, err := resp.Array()

	if err != nil {
		return fmt.Errorf("Can't decode commands info: %v", err)
	}

	for _, command := range commandList {
		commandInfo, err := command.List()

		if err != nil {
			return fmt.Errorf("Can't decode command info: %v", err)
		}

		if len(commandInfo) != 0 {
			for _, ci := range getCommands() {
				if ci.Name == strings.ToUpper(commandInfo[0]) {
					ci.IsSupported = true
				}
			}
		}
	}

	return nil
}
